# .dockerignore
# Define files and directories to exclude from the Docker build context.

# --- Git & Docker ---
# Git repository files
.git
.gitignore

# Docker related files (not needed inside the image itself)
Dockerfile
.dockerignore
docker-compose.yml
portainer_docker-compose.yml
.yaml

# Add any other docker-compose variations here

# --- Python Virtual Environments ---
# Common names for virtual environments
venv/
.venv/
ENV/
env/
env.bak/
venv.bak/

# --- Python Cache & Compiled Files ---
# Bytecode and cache directories/files
__pycache__/
*.py[cod]
*.so

# --- IDE / Editor Specific ---
# Configuration directories for common IDEs
.idea/
.vscode/
*.sublime-*
*.iml

# --- Testing Artifacts ---
# Cache, coverage reports, etc.
.pytest_cache/
.coverage*
htmlcov/
nosetests.xml
coverage.xml

# --- Build Artifacts ---
# Files and directories generated by build processes
dist/
build/
*.egg-info/
*.egg
wheels/

# --- Data Directory (CRITICAL) ---
# This directory contains user data and MUST be handled by a Docker Volume Mount.
# NEVER copy the host's data directory into the image during build.
data/

# --- Environment Files ---
# These contain secrets and configuration, handled by Volume Mount or Docker Environment variables.
# They are not needed during the image build process itself.
.env
*.env.*
.envrc

# --- OS Specific Junk Files ---
# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
# Windows
Thumbs.db
ehthumbs.db
desktop.ini
# Linux temporary files
*~

# --- Documentation / Project Files ---
# These are generally not needed inside the running container image.
README.md
LICENSE # Or your specific license file name
docs/ # If you have a documentation folder

# --- Development/Utility Scripts ---
# Scripts used for setup/dev tasks, not needed by the running application.
# Ignoring the whole directory is usually safe unless a script IS needed at runtime.
# scripts/

# --- Instance Folder (If used by Flask) ---
# Although not explicitly in your structure, it's a common pattern.
instance/

# --- Node Modules (If frontend dependencies are ever managed by npm/yarn) ---
# node_modules/
# package-lock.json
# yarn.lock

# --- Other Cache/Temp Files ---
# MyPy cache
.mypy_cache/
# Ruff cache
.ruff_cache/
# pytype cache
.pytype/
# Celery schedule file (if Celery added later)
celerybeat-schedule
# Process ID files
*.pid
codebase.txt
codebase.py
codebase_log.log
codebase_findmy.txt
codebase*.txt